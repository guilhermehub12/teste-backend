openapi: 3.0.0
info:
  title: 'Api RESTful com Laravel 12'
  description: 'Essa é uma API REST feita com Laravel 12, Passport para autenticação e para autorização.'
  contact:
    email: contato@delmirosolucoes.com.br
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
  version: 1.0.0
servers:
  -
    url: 'http://localhost/api'
    description: 'API Server'
paths:
  /posts:
    get:
      tags:
        - Posts
      summary: 'Listar posts'
      description: 'Lista todos os posts com opções de filtro'
      operationId: listPosts
      parameters:
        -
          name: tag
          in: query
          description: 'Filtrar posts por tag'
          required: false
          schema:
            type: string
            example: Laravel
        -
          name: query
          in: query
          description: 'Buscar posts por título ou conteúdo'
          required: false
          schema:
            type: string
        -
          name: per_page
          in: query
          description: 'Quantidade de posts por página'
          required: false
          schema:
            type: integer
            default: 5
      responses:
        200:
          description: 'Lista de posts retornada com sucesso'
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Exibindo todos os posts'
                  data:
                    type: array
                    items:
                      properties:
                        id:
                          type: integer
                          example: 1
                        title:
                          type: string
                          example: 'Título do Post'
                        author:
                          properties:
                            id:
                              type: integer
                              example: 1
                            nome:
                              type: string
                              example: 'Nome do Autor'
                            telefone:
                              type: string
                              example: '11999999999'
                            email:
                              type: string
                              example: autor@exemplo.com
                          type: object
                        content:
                          type: string
                        tags:
                          type: array
                          items:
                            type: string
                      type: object
                  meta:
                    properties:
                      total:
                        type: integer
                      per_page:
                        type: integer
                      current_page:
                        type: integer
                      last_page:
                        type: integer
                    type: object
                type: object
        404:
          description: 'Nenhum post encontrado'
      security:
        -
          passport: []
    post:
      tags:
        - Posts
      summary: 'Criar novo post'
      description: 'Cria um novo post'
      operationId: storePost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - title
                - content
                - tags
              properties:
                title:
                  description: 'Título do post'
                  type: string
                  example: 'Título do Post'
                content:
                  description: 'Conteúdo do post'
                  type: string
                  example: 'Conteúdo detalhado do post'
                tags:
                  description: 'Tags relacionadas ao post'
                  type: array
                  items:
                    type: string
                  example:
                    - Laravel
                    - PHP
                    - API
              type: object
      responses:
        200:
          description: 'Post criado com sucesso'
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Post criado com sucesso'
                  data:
                    properties:
                      id:
                        type: integer
                        example: 1
                      title:
                        type: string
                        example: 'Título do Post'
                      author:
                        properties:
                          id:
                            type: integer
                            example: 1
                          nome:
                            type: string
                            example: 'Nome do Autor'
                          telefone:
                            type: string
                            example: '11999999999'
                          email:
                            type: string
                            example: autor@exemplo.com
                        type: object
                      content:
                        type: string
                        example: 'Conteúdo detalhado do post'
                      tags:
                        type: array
                        items:
                          type: string
                    type: object
                type: object
        422:
          description: 'Erro de validação'
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Erro ao criar post'
                  errors:
                    type: object
                type: object
      security:
        -
          passport: []
  '/posts/{id}':
    get:
      tags:
        - Posts
      summary: 'Exibir post específico'
      description: 'Retorna os dados de um post específico'
      operationId: showPost
      parameters:
        -
          name: id
          in: path
          description: 'ID do post'
          required: true
          schema:
            type: integer
      responses:
        200:
          description: 'Post encontrado com sucesso'
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Post encontrado'
                  data:
                    properties:
                      id:
                        type: integer
                        example: 1
                      title:
                        type: string
                        example: 'Título do Post'
                      author:
                        properties:
                          id:
                            type: integer
                            example: 1
                          nome:
                            type: string
                            example: 'Nome do Autor'
                          telefone:
                            type: string
                            example: '11999999999'
                          email:
                            type: string
                            example: autor@exemplo.com
                        type: object
                      content:
                        type: string
                        example: 'Conteúdo detalhado do post'
                      tags:
                        type: array
                        items:
                          type: string
                    type: object
                type: object
        404:
          description: 'Post não encontrado'
      security:
        -
          passport: []
    put:
      tags:
        - Posts
      summary: 'Atualizar post'
      description: 'Atualiza os dados de um determinado post'
      operationId: updatePost
      parameters:
        -
          name: id
          in: path
          description: 'ID do post'
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                title:
                  type: string
                  example: 'Novo Título do Post'
                content:
                  type: string
                  example: 'Novo conteúdo do post'
                tags:
                  type: array
                  items:
                    type: string
                  example:
                    - Laravel
                    - PHP
                    - API
              type: object
      responses:
        200:
          description: 'Post atualizado com sucesso'
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Post atualizado com sucesso'
                  data:
                    properties:
                      id:
                        type: integer
                        example: 1
                      title:
                        type: string
                        example: 'Novo Título do Post'
                      author:
                        properties:
                          id:
                            type: integer
                            example: 1
                          nome:
                            type: string
                            example: 'Nome do Autor'
                          telefone:
                            type: string
                            example: '11999999999'
                          email:
                            type: string
                            example: autor@exemplo.com
                        type: object
                      content:
                        type: string
                        example: 'Novo conteúdo do post'
                      tags:
                        type: array
                        items:
                          type: string
                    type: object
                type: object
        422:
          description: 'Erro de validação'
        404:
          description: 'Post não encontrado'
      security:
        -
          passport: []
    delete:
      tags:
        - Posts
      summary: 'Remover post'
      description: 'Remove um post específico do sistema'
      operationId: deletePost
      parameters:
        -
          name: id
          in: path
          description: 'ID do post'
          required: true
          schema:
            type: integer
      responses:
        200:
          description: 'Post removido com sucesso'
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Post removido com sucesso'
                  data:
                    type: array
                    items: []
                type: object
        404:
          description: 'Post não encontrado'
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Post não encontrado'
                type: object
      security:
        -
          passport: []
  /users:
    get:
      tags:
        - Usuários
      summary: 'Lista todos os usuários'
      description: 'Retorna uma lista paginada de todos os usuários cadastrados no sistema'
      operationId: listUsers
      parameters:
        -
          name: page
          in: query
          description: 'Número da página para paginação'
          required: false
          schema:
            type: integer
            default: 1
        -
          name: per_page
          in: query
          description: 'Quantidade de registros por página'
          required: false
          schema:
            type: integer
            default: 15
      responses:
        200:
          description: 'Lista de usuários retornada com sucesso'
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Lista de usuários retornada com sucesso'
                  data:
                    type: array
                    items:
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: 'João Silva'
                        email:
                          type: string
                          example: joao@exemplo.com
                        telefone:
                          type: string
                          example: '11999999999'
                        is_admin:
                          type: boolean
                          example: false
                        is_valid:
                          type: boolean
                          example: true
                        created_at:
                          type: string
                          format: datetime
                      type: object
                  meta:
                    properties:
                      total:
                        type: integer
                        example: 50
                      per_page:
                        type: integer
                        example: 15
                      current_page:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 4
                    type: object
                type: object
        401:
          description: 'Não autorizado'
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Não autorizado'
                type: object
      security:
        -
          passport: []
    post:
      tags:
        - Usuários
      summary: 'Criar novo usuário'
      description: 'Cria um novo usuário no sistema'
      operationId: storeUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
                - email
                - password
                - telefone
              properties:
                name:
                  description: 'Nome completo do usuário'
                  type: string
                  example: 'João Silva'
                email:
                  description: 'Email do usuário'
                  type: string
                  format: email
                  example: joao@exemplo.com
                password:
                  description: 'Senha do usuário'
                  type: string
                  format: password
                  example: senha123
                telefone:
                  description: 'Telefone do usuário'
                  type: string
                  example: '11999999999'
                is_valid:
                  description: 'Status da conta'
                  type: boolean
                  example: true
                is_admin:
                  description: 'Privilégios administrativos'
                  type: boolean
                  example: false
              type: object
      responses:
        200:
          description: 'Usuário criado com sucesso'
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Usuário registrado com sucesso'
                  data:
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'João Silva'
                      email:
                        type: string
                        example: joao@exemplo.com
                      telefone:
                        type: string
                        example: '11999999999'
                      is_valid:
                        type: boolean
                        example: true
                      is_admin:
                        type: boolean
                        example: false
                      created_at:
                        type: string
                        format: datetime
                    type: object
                type: object
        422:
          description: 'Erro de validação'
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Erro ao criar usuário'
                  errors:
                    type: object
                type: object
      security:
        -
          passport: []
  '/users/{id}':
    get:
      tags:
        - Usuários
      summary: 'Exibir usuário específico'
      description: 'Retorna os dados de um usuário específico'
      operationId: showUser
      parameters:
        -
          name: id
          in: path
          description: 'ID do usuário'
          required: true
          schema:
            type: integer
      responses:
        200:
          description: 'Usuário encontrado com sucesso'
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Usuário encontrado'
                  data:
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'João Silva'
                      email:
                        type: string
                        example: joao@exemplo.com
                      telefone:
                        type: string
                        example: '11999999999'
                      is_valid:
                        type: boolean
                        example: true
                      is_admin:
                        type: boolean
                        example: false
                      created_at:
                        type: string
                        format: datetime
                    type: object
                type: object
        404:
          description: 'Usuário não encontrado'
      security:
        -
          passport: []
    put:
      tags:
        - Usuários
      summary: 'Atualizar usuário'
      description: 'Atualiza os dados de um usuário específico'
      operationId: updateUser
      parameters:
        -
          name: id
          in: path
          description: 'ID do usuário'
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                  example: 'João Silva'
                email:
                  type: string
                  format: email
                  example: joao@exemplo.com
                password:
                  type: string
                  format: password
                  example: novasenha123
                telefone:
                  type: string
                  example: '11999999999'
                is_valid:
                  type: boolean
                  example: true
                is_admin:
                  type: boolean
                  example: false
              type: object
      responses:
        200:
          description: 'Usuário atualizado com sucesso'
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Usuário atualizado com sucesso'
                  data:
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'João Silva'
                      email:
                        type: string
                        example: joao@exemplo.com
                      telefone:
                        type: string
                        example: '11999999999'
                      is_valid:
                        type: boolean
                        example: true
                      is_admin:
                        type: boolean
                        example: false
                      created_at:
                        type: string
                        format: datetime
                    type: object
                type: object
        422:
          description: 'Erro de validação'
      security:
        -
          passport: []
    delete:
      tags:
        - Usuários
      summary: 'Remover usuário'
      description: 'Remove um usuário do sistema'
      operationId: deleteUser
      parameters:
        -
          name: id
          in: path
          description: 'ID do usuário'
          required: true
          schema:
            type: integer
      responses:
        200:
          description: 'Usuário removido com sucesso'
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Usuário removido com sucesso'
                type: object
        404:
          description: 'Usuário não encontrado'
      security:
        -
          passport: []
  /auth/register:
    post:
      tags:
        - Autenticação
      summary: 'Registra um novo usuário'
      description: 'Endpoint para registrar um novo usuário na aplicação e retorna um token de acesso'
      operationId: register
      requestBody:
        description: 'Dados do usuário para registro'
        required: true
        content:
          application/json:
            schema:
              required:
                - name
                - email
                - password
                - telefone
              properties:
                name:
                  description: 'Nome completo do usuário'
                  type: string
                  example: 'João da Silva'
                email:
                  description: 'E-mail do usuário'
                  type: string
                  format: email
                  example: joao@exemplo.com
                password:
                  description: 'Senha do usuário (min 8 caracteres)'
                  type: string
                  format: password
                  example: senha1234@
                telefone:
                  description: 'Número de telefone do usuário'
                  type: string
                  example: '85999999999'
                is_valid:
                  description: 'Status de usuário (ativo ou inativo)'
                  type: boolean
                  example: true
                is_admin:
                  description: 'Permissão de administrador'
                  type: boolean
                  example: false
              type: object
      responses:
        200:
          description: 'Usuário registrado com sucesso'
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Usuário registrado com sucesso.'
                  token:
                    type: string
                    example: 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9...'
                  data:
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'João da Silva'
                      email:
                        type: string
                        example: joao@exemplo.com
                      password:
                        type: string
                        example: senha1234@
                      telefone:
                        type: string
                        example: '85999999999'
                      is_valid:
                        type: boolean
                        example: true
                      is_admin:
                        type: boolean
                        example: false
                      created_at:
                        type: string
                        format: datetime
                        example: '2024-03-01T12:00:00Z'
                    type: object
                type: object
        422:
          description: 'Erro ao cadastrar o usuário. Verifique os dados fornecidos.'
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Credenciais inválidas'
                  errors:
                    type: object
                type: object
  /auth/login:
    post:
      tags:
        - Autenticação
      summary: 'Realiza login do usuário'
      description: 'Autentica o usuário e retorna um token de acesso'
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - email
                - password
              properties:
                email:
                  description: 'Email do usuário'
                  type: string
                  format: email
                  example: joao@exemplo.com
                password:
                  description: 'Senha do usuário'
                  type: string
                  format: password
                  example: senha1234@
              type: object
      responses:
        200:
          description: 'Login realizado com sucesso'
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Login realizado com sucesso'
                  token:
                    type: string
                    example: 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9...'
                  data:
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'João Silva'
                      email:
                        type: string
                        example: joao@exemplo.com
                      telefone:
                        type: string
                        example: '11999999999'
                      is_valid:
                        type: boolean
                        example: true
                      is_admin:
                        type: boolean
                        example: false
                      created_at:
                        type: string
                        format: datetime
                        example: '2024-03-01T12:00:00Z'
                    type: object
                type: object
        401:
          description: 'Credenciais inválidas'
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Credenciais inválidas'
                  errors:
                    type: object
                type: object
  /auth/logout:
    post:
      tags:
        - Autenticação
      summary: 'Realiza logout do usuário'
      description: 'Revoga o token de acesso do usuário atual'
      operationId: logout
      responses:
        200:
          description: 'Logout realizado com sucesso'
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Logout realizado com sucesso'
                type: object
        500:
          description: 'Erro ao realizar logout'
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Falha ao realizar logout'
                type: object
      security:
        -
          passport: []
  /auth/profile:
    get:
      tags:
        - Autenticação
      summary: 'Retorna o perfil do usuário'
      description: 'Obtém os dados do perfil do usuário autenticado'
      operationId: profile
      responses:
        200:
          description: 'Perfil encontrado com sucesso'
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Perfil encontrado'
                  data:
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'João Silva'
                      email:
                        type: string
                        example: joao@exemplo.com
                      telefone:
                        type: string
                        example: '11999999999'
                      is_valid:
                        type: boolean
                        example: true
                      is_admin:
                        type: boolean
                        example: false
                      created_at:
                        type: string
                        format: datetime
                        example: '2024-03-01T12:00:00Z'
                    type: object
                type: object
        500:
          description: 'Erro ao buscar perfil'
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Perfil não encontrado'
                type: object
      security:
        -
          passport: []
tags:
  -
    name: Posts
    description: 'Gerenciamento de posts'
  -
    name: Usuários
    description: 'Gerenciamento de usuários do sistema'
  -
    name: Autenticação
    description: 'Gerenciamento de autenticação de usuários'
components:
  securitySchemes:
    passport:
      type: apiKey
      description: 'Informe o token no formato: Bearer {token}.'
      name: Authorization
      in: header
security:
  -
    passport: []
